path-constant TOP : .. ;
path-constant ROOT : $(TOP)/.. ;

import convert ;

project generator-self
    : requirements 
        <include>compiler/model
        <include>generator/aligner/object
    ;

boost-defines ;

lib generator-self-compil :
    $(TOP)/core/boost/boost_assert_handler.cpp
   
    generator/method_group.compil
    
    generator/cpp/format/argument.compil
    generator/cpp/format/cast_operator.compil
    generator/cpp/format/comment.compil
    generator/cpp/format/constructor_specifier.compil
    generator/cpp/format/constructor_name.compil
    generator/cpp/format/constructor.compil
    generator/cpp/format/destructor_specifier.compil
    generator/cpp/format/destructor_name.compil
    generator/cpp/format/destructor.compil
    generator/cpp/format/function_call.compil
    generator/cpp/format/function_name.compil
    generator/cpp/format/function.compil
    generator/cpp/format/initialization.compil
    generator/cpp/format/method_declaration.compil
    generator/cpp/format/method_name.compil
    generator/cpp/format/method_specifier.compil
    generator/cpp/format/method.compil
    generator/cpp/format/namespace_name.compil
    generator/cpp/format/namespace.compil
    generator/cpp/format/parameter_value.compil
    generator/cpp/format/type_declaration.compil
    generator/cpp/format/type_decoration.compil
    generator/cpp/format/type_name.compil
    generator/cpp/format/type.compil
    generator/cpp/format/variable_name.compil

    boost_templates
  :
    <compil-type>main
    <include>$(TOP)/core/c++
  ;



