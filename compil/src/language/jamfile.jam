path-constant TOP : .. ;
path-constant ROOT : $(TOP)/.. ;

boost-defines ;
gtest-defines ;

project language
    : requirements 
        <include>.
        <include>$(TOP)/c++
    ;
    
lib language
  :
    $(TOP)/core/boost/boost_assert_handler.cpp
    
    all/list.scompil
    all/scope.scompil
    
    c++/class/class.scompil
    c++/class/class_name.scompil
    
    c++/expression/custom_expression.scompil
    c++/expression/custom_id_expression.scompil
    c++/expression/custom_postfix_expression.scompil
    c++/expression/expression.scompil
    c++/expression/expression_list.scompil
    c++/expression/expression_factory.scompil
    c++/expression/id_expression.scompil
    c++/expression/id_expression_primary_expression.scompil
    c++/expression/identifier_unqualified_id.scompil
    c++/expression/member_access_postfix_expression.scompil
    c++/expression/parentheses_postfix_expression.scompil
    c++/expression/postfix_expression.scompil
    c++/expression/primary_expression.scompil
    c++/expression/primary_expression_postfix_expression.scompil
    c++/expression/unqualified_id_expression.scompil
    c++/expression/unqualified_id.scompil

    c++/lexical/identifier.scompil
    
    c++/logical/local_variable.scompil
    c++/logical/variable.scompil
    c++/logical/variable_name.scompil
    
    c++/statement/compound_statement.scompil
    c++/statement/declaration_statement.scompil
    c++/statement/macro_statement.scompil
    c++/statement/statement.scompil
    c++/statement/statement_factory.scompil
    c++/statement/test_statement.scompil
    c++/statement/variable_declaration_statement.scompil
    
    c++/preprocessor/macro.scompil
    c++/preprocessor/macro_parameter.scompil
    c++/preprocessor/macro_name.scompil
    
    c++/test/test.scompil
    c++/test/test_name.scompil
    c++/test/test_suite.scompil
    c++/test/test_suite_name.scompil
    
    #c++/comment.compil
    #c++/const_declaration.compil
    #c++/constructor.compil
    #c++/copy_right_comment.compil
    #c++/destructor.compil
    #c++/document.compil
    #c++/header_guard.compil
    #c++/header_path.compil
    #c++/header_section.compil
    #c++/header_type.compil
    #c++/header.compil
    #c++/include.compil
    #c++/layer_comment.compil
    #c++/method_comment.compil
    #c++/method_name.compil
    #c++/method_specifier.compil
    #c++/method.compil
    #c++/namespace_name.compil
    #c++/namespace.compil
    
    boost_templates
  :
    <compil-stable-type>main
    <include>$(TOP)/c++
  ;

gtest language 
  :
    [ glob *_unittest.cpp ]
    
    language
  :
    <implicit-dependency>language
  ;

