path-constant TOP : .. ;
path-constant ROOT : $(TOP)/.. ;

import convert ;

boost-defines ;
gtest-defines ;

local GEN = .gen/language ;

project language
    : requirements 
      <include>$(TOP)
      <include>.gen
    ;

lib all-language
  :
    $(GEN)/all/element/element.cpp
    $(GEN)/all/element/element_factory.cpp
    $(GEN)/all/element/end_of_line.cpp
    $(GEN)/all/element/line_delimiter.cpp
    $(GEN)/all/element/list.cpp
    $(GEN)/all/element/passage.cpp
    $(GEN)/all/element/string.cpp
    
    $(GEN)/all/mold/level.cpp
    $(GEN)/all/mold/line.cpp
    $(GEN)/all/mold/mold.cpp
    $(GEN)/all/mold/scope.cpp

    $(TOP)/core//core
    
    boost_templates
  :
  :
  :
    <include>$(TOP)
    <include>.gen
  ; 

lib cpp-language
  :
    $(GEN)/c++/class/class.cpp
    $(GEN)/c++/class/class_head.cpp
    $(GEN)/c++/class/class_key.cpp
    $(GEN)/c++/class/class_name.cpp
    $(GEN)/c++/class/class_name_factory.cpp
    $(GEN)/c++/class/class_specifier.cpp
    $(GEN)/c++/class/constructor.cpp
    $(GEN)/c++/class/constructor_method_name.cpp
    $(GEN)/c++/class/declarator_member_declarator.cpp
    $(GEN)/c++/class/destructor.cpp
    $(GEN)/c++/class/destructor_method_name.cpp
    $(GEN)/c++/class/function_definition_member_declaration.cpp
    $(GEN)/c++/class/identifier_class_name.cpp
    $(GEN)/c++/class/identifier_destructor_method_name.cpp
    $(GEN)/c++/class/identifier_method_name.cpp
    $(GEN)/c++/class/member_declaration.cpp
    $(GEN)/c++/class/member_declarator.cpp
    $(GEN)/c++/class/member_specification.cpp
    $(GEN)/c++/class/member_variable.cpp
    $(GEN)/c++/class/method.cpp
    $(GEN)/c++/class/method_name.cpp
    $(GEN)/c++/class/method_specifier.cpp
    $(GEN)/c++/class/operator_method_name.cpp
    $(GEN)/c++/class/pure_member_declarator.cpp
    $(GEN)/c++/class/pure_specifier.cpp
    $(GEN)/c++/class/specifier_member_declaration.cpp

    $(GEN)/c++/declaration/block_declaration.cpp
    $(GEN)/c++/declaration/builtin_simple_type_specifier.cpp
    $(GEN)/c++/declaration/class_declaration_specifier.cpp
    $(GEN)/c++/declaration/class_type_name.cpp
    $(GEN)/c++/declaration/cv_qualifier_type_specifier.cpp
    $(GEN)/c++/declaration/declaration.cpp
    $(GEN)/c++/declaration/declaration_factory.cpp
    $(GEN)/c++/declaration/declaration_specifier.cpp
    $(GEN)/c++/declaration/declaration_specifier_sequence.cpp
    $(GEN)/c++/declaration/function_declaration_specifier.cpp
    $(GEN)/c++/declaration/function_name.cpp
    $(GEN)/c++/declaration/function_specifier.cpp
    $(GEN)/c++/declaration/generic_declaration_specifier.cpp
    $(GEN)/c++/declaration/simple_declaration.cpp
    $(GEN)/c++/declaration/simple_block_declaration.cpp
    $(GEN)/c++/declaration/simple_type_specifier.cpp
    $(GEN)/c++/declaration/type_declaration_specifier.cpp
    $(GEN)/c++/declaration/type_name.cpp
    $(GEN)/c++/declaration/type_name_simple_type_specifier.cpp
    $(GEN)/c++/declaration/type_specifier.cpp

    $(GEN)/c++/declarator/body_function_definition.cpp
    $(GEN)/c++/declarator/cv_qualifier_sequence.cpp
    $(GEN)/c++/declarator/cv_qualifier.cpp
    $(GEN)/c++/declarator/declarator.cpp
    $(GEN)/c++/declarator/declarator_factory.cpp
    $(GEN)/c++/declarator/declarator_id.cpp
    $(GEN)/c++/declarator/declarator_id_direct_declarator.cpp
    $(GEN)/c++/declarator/declarator_parameter_declaratoin.cpp
    $(GEN)/c++/declarator/direct_declarator.cpp
    $(GEN)/c++/declarator/function_body.cpp
    $(GEN)/c++/declarator/function_definition.cpp
    $(GEN)/c++/declarator/function_name_declarator_id.cpp
    $(GEN)/c++/declarator/init_declarator.cpp
    $(GEN)/c++/declarator/parameter_declaratoin.cpp
    $(GEN)/c++/declarator/parameter_declaratoin_clause.cpp
    $(GEN)/c++/declarator/parameter_declaratoin_list.cpp
    $(GEN)/c++/declarator/parameters_direct_declarator.cpp
    $(GEN)/c++/declarator/pointer_declarator.cpp
    $(GEN)/c++/declarator/pointer_operator.cpp
    $(GEN)/c++/declarator/reference_pointer_operator.cpp
    $(GEN)/c++/declarator/type_name_declarator_id.cpp
    $(GEN)/c++/declarator/variable_name_declarator.cpp
    
    $(GEN)/c++/derieved_class/access_specifier.cpp
    
    $(GEN)/c++/expression/additive_expression.cpp
    $(GEN)/c++/expression/additive_shift_expression.cpp
    $(GEN)/c++/expression/class_nested_name.cpp
    $(GEN)/c++/expression/cast_expression.cpp
    $(GEN)/c++/expression/cast_pm_expression.cpp
    $(GEN)/c++/expression/constructor_call_expression.cpp
    $(GEN)/c++/expression/custom_expression.cpp
    $(GEN)/c++/expression/custom_id_expression.cpp
    $(GEN)/c++/expression/custom_postfix_expression.cpp
    $(GEN)/c++/expression/equality_expression.cpp
    $(GEN)/c++/expression/expression.cpp
    $(GEN)/c++/expression/expression_list.cpp
    $(GEN)/c++/expression/expression_factory.cpp
    $(GEN)/c++/expression/generic_additive_expression.cpp
    $(GEN)/c++/expression/generic_equality_expression.cpp
    $(GEN)/c++/expression/generic_relational_expression.cpp
    $(GEN)/c++/expression/grammar_additive_expression.cpp
    $(GEN)/c++/expression/grammar_equality_expression.cpp
    $(GEN)/c++/expression/grammar_relational_expression.cpp
    $(GEN)/c++/expression/id_expression.cpp
    $(GEN)/c++/expression/id_expression_primary_expression.cpp
    $(GEN)/c++/expression/identifier_unqualified_id.cpp
    $(GEN)/c++/expression/member_access_postfix_expression.cpp
    $(GEN)/c++/expression/multiplicative_additive_expression.cpp
    $(GEN)/c++/expression/multiplicative_expression.cpp
    $(GEN)/c++/expression/method_call_expression.cpp
    $(GEN)/c++/expression/namespace_nested_name.cpp
    $(GEN)/c++/expression/nested_name.cpp
    $(GEN)/c++/expression/nested_name_specifier.cpp
    $(GEN)/c++/expression/parentheses_postfix_expression.cpp
    $(GEN)/c++/expression/pm_expression.cpp
    $(GEN)/c++/expression/pm_multiplicative_expression.cpp
    $(GEN)/c++/expression/postfix_expression.cpp
    $(GEN)/c++/expression/postfix_unary_expression.cpp
    $(GEN)/c++/expression/primary_expression.cpp
    $(GEN)/c++/expression/primary_expression_postfix_expression.cpp
    $(GEN)/c++/expression/relational_equality_expression.cpp
    $(GEN)/c++/expression/relational_expression.cpp
    $(GEN)/c++/expression/shift_expression.cpp
    $(GEN)/c++/expression/shift_relational_expression.cpp
    $(GEN)/c++/expression/unary_cast_expression.cpp
    $(GEN)/c++/expression/unary_expression.cpp
    $(GEN)/c++/expression/unqualified_id_expression.cpp
    $(GEN)/c++/expression/unqualified_id.cpp
    $(GEN)/c++/expression/variable_expression.cpp

    $(GEN)/c++/lexical/identifier-cpp.cpp
    
    $(GEN)/c++/logical/argument_variable_name.cpp
    $(GEN)/c++/logical/local_variable_name.cpp
    $(GEN)/c++/logical/member_variable_name.cpp
    $(GEN)/c++/logical/type_kind.cpp
    $(GEN)/c++/logical/variable_name.cpp
    
    $(GEN)/c++/namespace/identifier_namespace_name.cpp
    $(GEN)/c++/namespace/namespace_name_factory.cpp
    $(GEN)/c++/namespace/namespace_name.cpp
    $(GEN)/c++/namespace/namespace.cpp
    
    $(GEN)/c++/overloading/operator_function_id.cpp
    $(GEN)/c++/overloading/operator.cpp
    
    $(GEN)/c++/preprocessor/declaration_macro_argument.cpp
    $(GEN)/c++/preprocessor/expression_macro_argument.cpp
    $(GEN)/c++/preprocessor/macro.cpp
    $(GEN)/c++/preprocessor/macro_argument.cpp
    $(GEN)/c++/preprocessor/macro_argument_factory.cpp
    $(GEN)/c++/preprocessor/macro_name.cpp
    
    $(GEN)/c++/statement/binary_test_statement.cpp
    $(GEN)/c++/statement/compound_statement.cpp
    $(GEN)/c++/statement/declaration_statement.cpp
    $(GEN)/c++/statement/expression_statement.cpp
    $(GEN)/c++/statement/jump_statement.cpp
    $(GEN)/c++/statement/macro_statement.cpp
    $(GEN)/c++/statement/return_jump_statement.cpp
    $(GEN)/c++/statement/statement.cpp
    $(GEN)/c++/statement/statement_factory.cpp
    $(GEN)/c++/statement/variable_declaration_statement.cpp
    $(GEN)/c++/statement/throw_test_statement.cpp
    $(GEN)/c++/statement/unary_test_statement.cpp
    
    $(GEN)/c++/test/test.cpp
    $(GEN)/c++/test/test_name.cpp
    $(GEN)/c++/test/test_suite.cpp
    $(GEN)/c++/test/test_suite_name.cpp

    $(TOP)/core//core
    
    boost_templates
  :
  :
  :
    <include>$(TOP)
    <include>.gen
  ;   
    
lib compil-language
  :
    $(GEN)/compil/all/comment.cpp
    $(GEN)/compil/all/file.cpp
    $(GEN)/compil/all/name.cpp
    $(GEN)/compil/all/object_factory.cpp
    $(GEN)/compil/all/object.cpp
    $(GEN)/compil/all/package_element.cpp
    $(GEN)/compil/all/package.cpp
    $(GEN)/compil/all/source_id.cpp
    $(GEN)/compil/all/version.cpp

    $(GEN)/compil/document/alter.cpp
    $(GEN)/compil/document/castable_type.cpp
    $(GEN)/compil/document/constant.cpp
    $(GEN)/compil/document/default_value.cpp
    $(GEN)/compil/document/enumeration_value.cpp
    $(GEN)/compil/document/field.cpp
    $(GEN)/compil/document/field_override.cpp
    $(GEN)/compil/document/filter.cpp
    $(GEN)/compil/document/identification.cpp
    $(GEN)/compil/document/identifier.cpp
    $(GEN)/compil/document/import.cpp
    $(GEN)/compil/document/interface.cpp
    $(GEN)/compil/document/method.cpp
    $(GEN)/compil/document/operator_action.cpp
    $(GEN)/compil/document/operator_flags.cpp
    $(GEN)/compil/document/operator.cpp
    $(GEN)/compil/document/parameter.cpp
    $(GEN)/compil/document/reference.cpp
    $(GEN)/compil/document/unary_container.cpp
    $(GEN)/compil/document/unary_template.cpp
    $(GEN)/compil/document/upcopy.cpp
    
    $(GEN)/compil/project/file_path.cpp
    $(GEN)/compil/project/project.cpp
    $(GEN)/compil/project/section.cpp

    compil/document/document.cpp
    compil/document/enumeration.cpp
    compil/document/factory.cpp
    compil/document/integer.cpp
    compil/document/specimen.cpp
    compil/document/structure.cpp
    compil/document/type.cpp

    $(GEN)/compil/document/document-partial.cpp
    $(GEN)/compil/document/enumeration-partial.cpp
    $(GEN)/compil/document/factory-partial.cpp
    $(GEN)/compil/document/integer-partial.cpp
    $(GEN)/compil/document/specimen-partial.cpp
    $(GEN)/compil/document/structure-partial.cpp
    $(GEN)/compil/document/type-partial.cpp
    
    boost_templates

    $(TOP)/core//core
  :
  :
  :
    <include>$(TOP)
    <include>.gen
  ;

alias language
  :
    all-language
    cpp-language
    compil-language
  ;

gtest language 
  :
    [ glob *_unittest.cpp ]
    
    language
  ;

