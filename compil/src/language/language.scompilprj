// CompIL - Component Interface Language
// Copyright 2011 George Georgiev.  All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * The name of George Georgiev can not be used to endorse or 
// promote products derived from this software without specific prior 
// written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Author: george.georgiev@hotmail.com (George Georgiev)
//

compil { }

core package core.compil;

section main
{
    all/element/element.scompil;
    all/element/element_factory.scompil;
    all/element/end_of_line.scompil;
    all/element/list.scompil;
    all/element/passage.scompil;
    all/element/string.scompil;

    all/mold/level.scompil;
    all/mold/line.scompil;
    all/mold/mold.scompil;
    all/mold/scope.scompil;
        
    c++/class/class.scompil;
    c++/class/class_head.scompil;
    c++/class/class_key.scompil;
    c++/class/class_name.scompil;
    c++/class/class_name_factory.scompil;
    c++/class/class_specifier.scompil;
    c++/class/constructor.scompil;
    c++/class/constructor_method_name.scompil;
    c++/class/destructor.scompil;
    c++/class/destructor_method_name.scompil;
    c++/class/function_definition_member_declaration.scompil;
    c++/class/identifier_class_name.scompil;
    c++/class/identifier_destructor_method_name.scompil;
    c++/class/identifier_method_name.scompil;
    c++/class/member_declaration.scompil;
    c++/class/member_declarator.scompil;
    c++/class/member_specification.scompil;
    c++/class/method.scompil;
    c++/class/method_name.scompil;
    c++/class/operator_method_name.scompil;
    c++/class/pure_member_declarator.scompil;
    c++/class/pure_specifier.scompil;

    c++/declaration/block_declaration.scompil;
    c++/declaration/class_declaration.scompil;
    c++/declaration/class_type_name.scompil;
    c++/declaration/cv_qualifier_type_specifier.scompil;
    c++/declaration/declaration.scompil;
    c++/declaration/declaration_factory.scompil;
    c++/declaration/declaration_specifier.scompil;
    c++/declaration/declaration_specifier_sequence.scompil;
    c++/declaration/function_name.scompil;
    c++/declaration/function_specifier.scompil;
    c++/declaration/simple_declaration.scompil;
    c++/declaration/simple_block_declaration.scompil;
    c++/declaration/simple_type_specifier.scompil;
    c++/declaration/type_declaration_specifier.scompil;
    c++/declaration/type_name.scompil;
    c++/declaration/type_name_simple_type_specifier.scompil;
    c++/declaration/type_specifier.scompil;
    
    c++/declarator/body_function_definition.scompil;
    c++/declarator/class_declarator.scompil;
    c++/declarator/cv_qualifier_sequence.scompil;
    c++/declarator/cv_qualifier.scompil;
    c++/declarator/declarator.scompil;
    c++/declarator/declarator_factory.scompil;
    c++/declarator/declarator_id.scompil;
    c++/declarator/declarator_id_direct_declarator.scompil;
    c++/declarator/declarator_parameter_declaratoin.scompil;
    c++/declarator/direct_declarator.scompil;
    c++/declarator/function_definition.scompil;
    c++/declarator/function_name_declarator_id.scompil;
    c++/declarator/init_declarator.scompil;
    c++/declarator/parameter_declaratoin.scompil;
    c++/declarator/parameter_declaratoin_clause.scompil;
    c++/declarator/parameter_declaratoin_list.scompil;
    c++/declarator/parameters_direct_declarator.scompil;
    c++/declarator/pointer_declarator.scompil;
    c++/declarator/pointer_operator.scompil;
    c++/declarator/reference_pointer_operator.scompil;
    c++/declarator/type_name_declarator_id.scompil;
    
    c++/derieved_class/access_specifier.scompil;
    
    c++/expression/additive_expression.scompil;
    c++/expression/additive_shift_expression.scompil;
    c++/expression/class_nested_name.scompil;
    c++/expression/cast_expression.scompil;
    c++/expression/cast_pm_expression.scompil;
    c++/expression/constructor_call_expression.scompil;
    c++/expression/custom_expression.scompil;
    c++/expression/custom_id_expression.scompil;
    c++/expression/custom_postfix_expression.scompil;
    c++/expression/equality_expression.scompil;
    c++/expression/expression.scompil;
    c++/expression/expression_list.scompil;
    c++/expression/expression_factory.scompil;
    c++/expression/generic_equality_expression.scompil;
    c++/expression/grammar_equality_expression.scompil;
    c++/expression/id_expression.scompil;
    c++/expression/id_expression_primary_expression.scompil;
    c++/expression/identifier_unqualified_id.scompil;
    c++/expression/member_access_postfix_expression.scompil;
    c++/expression/multiplicative_additive_expression.scompil;
    c++/expression/multiplicative_expression.scompil;
    c++/expression/method_call_expression.scompil;
    c++/expression/namespace_nested_name.scompil;
    c++/expression/nested_name.scompil;
    c++/expression/nested_name_specifier.scompil;
    c++/expression/parentheses_postfix_expression.scompil;
    c++/expression/pm_expression.scompil;
    c++/expression/pm_multiplicative_expression.scompil;
    c++/expression/postfix_expression.scompil;
    c++/expression/postfix_unary_expression.scompil;
    c++/expression/primary_expression.scompil;
    c++/expression/primary_expression_postfix_expression.scompil;
    c++/expression/relational_equality_expression.scompil;
    c++/expression/relational_expression.scompil;
    c++/expression/shift_expression.scompil;
    c++/expression/shift_relational_expression.scompil;
    c++/expression/unary_cast_expression.scompil;
    c++/expression/unary_expression.scompil;
    c++/expression/unqualified_id_expression.scompil;
    c++/expression/unqualified_id.scompil;
    c++/expression/variable_expression.scompil;

    c++/lexical/identifier-cpp.scompil;
    
    c++/logical/local_variable.scompil;
    c++/logical/variable.scompil;
    c++/logical/variable_name.scompil;
    
    c++/namespace/identifier_namespace_name.scompil;
    c++/namespace/namespace_name_factory.scompil;
    c++/namespace/namespace_name.scompil;
    c++/namespace/namespace.scompil;
    
    c++/overloading/operator_function_id.scompil;
    c++/overloading/operator.scompil;
    
    c++/preprocessor/declaration_macro_argument.scompil;
    c++/preprocessor/expression_macro_argument.scompil;
    c++/preprocessor/macro.scompil;
    c++/preprocessor/macro_argument.scompil;
    c++/preprocessor/macro_argument_factory.scompil;
    c++/preprocessor/macro_name.scompil;
    
    c++/statement/compound_statement.scompil;
    c++/statement/declaration_statement.scompil;
    c++/statement/expression_statement.scompil;
    c++/statement/macro_statement.scompil;
    c++/statement/statement.scompil;
    c++/statement/statement_factory.scompil;
    c++/statement/variable_declaration_statement.scompil;
    c++/statement/throw_test_statement.scompil;
    c++/statement/unary_test_statement.scompil;
    
    c++/test/test.scompil;
    c++/test/test_name.scompil;
    c++/test/test_suite.scompil;
    c++/test/test_suite_name.scompil;
    
            

    compil/all/comment.scompil;
    compil/all/file.scompil;
    compil/all/name.scompil;
    compil/all/object_factory.scompil;
    compil/all/object.scompil;
    compil/all/package.scompil;
    compil/all/package_element.scompil;
    compil/all/source_id.scompil;
    compil/all/version.scompil;

    compil/document/alter.scompil;
    compil/document/constant.scompil;
    compil/document/castable_type.scompil;
    compil/document/default_value.scompil;
    compil/document/enumeration_value.scompil;
    compil/document/field.scompil;
    compil/document/field_override.scompil;
    compil/document/filter.scompil;
    compil/document/identification.scompil;
    compil/document/identifier.scompil;
    compil/document/import.scompil;
    compil/document/interface.scompil;
    compil/document/method.scompil;
    compil/document/operator_action.scompil;
    compil/document/operator_flags.scompil;
    compil/document/operator.scompil;
    compil/document/parameter.scompil;
    compil/document/reference.scompil;
    compil/document/unary_container.scompil;
    compil/document/unary_template.scompil;
    compil/document/upcopy.scompil;
    
    compil/project/file_path.scompil;
    compil/project/project.scompil;
    compil/project/section.scompil;
}

section partial
{
    compil/document/document.scompil;
    compil/document/enumeration.scompil;
    compil/document/factory.scompil;
    compil/document/integer.scompil;
    compil/document/specimen.scompil;
    compil/document/structure.scompil;
    compil/document/type.scompil;
}