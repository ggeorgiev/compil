import os ;

rule boost_library_location ( properties * )
{
    local directory = [ library-directory $(properties) ] ;
    return $(ROOT)/boost/$(directory) ;
}

rule boost_search_library_location ( properties * )
{
    local directory = [ boost_library_location $(properties) ] ;
    return <search>$(directory) ;
}

rule boost-defines ( )
{
	local prefix = ;
	if [ os.name ] = NT
	{
		prefix = lib ;
	}

    alias boost_requirements_for_all
      :
      :
      :
      :
        <include>$(ROOT)/boost/include
        <define>BOOST_ENABLE_ASSERT_HANDLER
		<define>BOOST_ALL_NO_LIB
      ;

    alias boost_templates
      :
        boost_requirements_for_all
      ;

    lib boost_program_options-lib
      :
      :
        <name>$(prefix:E)boost_program_options
        <conditional>@boost_search_library_location
      ;

    alias boost_program_options
      :
        boost_requirements_for_all
        boost_program_options-lib
      ;
      
      
    lib boost_iostreams-lib
      :
      :
        <name>$(prefix:E)boost_iostreams
        <conditional>@boost_search_library_location
      ;
        
    alias boost_iostreams
      :
        boost_requirements_for_all
        boost_iostreams-lib
      :
      :
      :
       <define>_SCL_SECURE_NO_WARNINGS
      ;

    lib boost_system-lib
      :
      :
        <name>$(prefix:E)boost_system
        <conditional>@boost_search_library_location
      ;
        
    alias boost_system
      :
        boost_requirements_for_all
        boost_system-lib
      ;

    lib boost_filesystem-lib
      :
      :
        <name>$(prefix:E)boost_filesystem
        <conditional>@boost_search_library_location
      ;
          
    alias boost_filesystem
      :
        boost_requirements_for_all
        boost_filesystem-lib
        
        boost_system
      :
      :
      :
        <define>BOOST_FILESYSTEM_NO_DEPRECATED
      ;
}