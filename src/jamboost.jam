import os ;

rule boost_library_location ( properties * )
{
    local directory = [ library-directory $(properties) ] ;
    return $(ROOT)/boost/$(directory) ;
}

rule boost_search_library_location ( properties * )
{
    if [ os.name ] = NT
    {
        return ;
    }
    else
    {
        local directory = [ boost_library_location $(properties) ] ;
        return <search>$(directory) ;
    }
}

rule boost_path_library_location ( properties * )
{
    if [ os.name ] = NT
    {
        local directory = [ boost_library_location $(properties) ] ;
        return <library-path>$(directory) ;
    }
    else
    {
        return ;
    }
}

rule boost-defines ( )
{
    alias boost_requirements_for_all
      :
      :
      :
      :
        <include>$(ROOT)/boost/include
        <conditional>@boost_path_library_location
        <define>BOOST_ENABLE_ASSERT_HANDLER
      ;

    alias boost_templates
      :
        boost_requirements_for_all
      ;

    if [ os.name ] = NT
    {
        alias boost_program_options
          :
            boost_requirements_for_all
          ;

        alias boost_system
          :
            boost_requirements_for_all
          ;

        alias boost_filesystem
          :
            boost_requirements_for_all
          ;
    }
    else
    {
        lib boost_program_options-lib
          :
          :
            <name>boost_program_options
            <conditional>@boost_search_library_location
          ;

        alias boost_program_options
          :
            boost_requirements_for_all
            boost_program_options-lib
          ;
      
      
        lib boost_system-lib
          :
          :
            <name>boost_system
            <conditional>@boost_search_library_location
          ;
        
        alias boost_system
          :
            boost_requirements_for_all
            boost_system-lib
          ;
   
     
        lib boost_filesystem-lib
          :
          :
            <name>boost_filesystem
            <conditional>@boost_search_library_location
          ;
          
        alias boost_filesystem
          :
            boost_requirements_for_all
            boost_filesystem-lib
          :
          :
          :
            <define>BOOST_FILESYSTEM_NO_DEPRECATED
          ;
    }
}